commands-cr-restaurant-ordering.txt

This file contains the sequential commands/instrucions 
needed to deploy this application via AWS CloudFormation (SAM). 

====================================================
BEFORE FIRST DEPLOY
====================================================
1) => Install node libraries
npm --prefix ./layers/layer-cr-open-ai-client/nodejs install
npm --prefix ./layers/layer-cr-open-sendgrid-email-client/nodejs install
npm --prefix ./layers/layer-cr-twilio-client/nodejs install

2) => Save Secrets to AWS SecretsManager (or put crendentials in yaml -- not secure!)

Use AWS Secrets Manager and create a secret for this stack. The secret MUST BE NAMED CR_RESTAURANT_ORDERING and have the following SecretStrings:

OPENAI_API_KEY
TWILIO_ACCOUNT_SID
TWILIO_AUTH_TOKEN
SENDGRID_API_KEY
TWILIO_EMAIL_FROM_ADDRESS

The first SecretString is required to access the LLM. The next two are required to send SMS messages and the final two are needed to send emails. If you do not want to send SMS or email, just put in fake data for those strings.

====================================================
DEPLOY TEMPLATE
====================================================
Run `sam build` from this directory every time before deploying.

Run For First time
`sam deploy --guided --stack-name USE-CASE-RESTAURANT-ORDERING --template template.yaml --profile $(cat ../../aws-profile.profile) --capabilities CAPABILITY_NAMED_IAM`

Run For Subsequent Deployments after making code changes
`sam deploy --stack-name USE-CASE-RESTAURANT-ORDERING --template template.yaml --profile $(cat ../../aws-profile.profile) --capabilities CAPABILITY_NAMED_IAM`

====================================================
LINK AWS REST API ENDPOINT TO TWILIO
====================================================
Take Output from the stack called "TwimlAPI" and assign it to the Webhook for Voice handler for their desired phone number.

====================================================
DATA LOADING (once the stack has deployed once)
====================================================
`aws dynamodb put-item --table-name CR-RESTAURANT-ORDERING-ConversationRelayAppDatabase --item "$(node ./configuration/dynamo-loaders/restaurantOrderingUseCase.js | cat)" --profile $(cat ../../aws-profile.profile)`

This command loads an item to with LLM configuration data into the DynamoDB instance. This just needs to be run once.